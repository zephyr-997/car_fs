C251 COMPILER V5.60.0,  pid                                                                25/03/25  21:58:05  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE pid
OBJECT MODULE PLACED IN .\Out_File\pid.obj
COMPILER INVOKED BY: D:\Software\Keil5\c251v560\C251\BIN\C251.EXE ..\USER\src\pid.c XSMALL INTR2 FLOAT64 WARNINGLEVEL(3)
                    - OPTIMIZE(0,SPEED) BROWSE INCDIR(..\CODE;..\USER\inc;..\USER\src;..\seekfree_components;..\seekfree_libraries;..\seekfre
                    -e_peripheral;..\libraries) DEBUG PRINT(.\Out_File\pid.lst) TABS(2) OBJECT(.\Out_File\pid.obj) 

stmt  level    source

    1          #include "pid.h"
    2          
    3          PID_t LeftPID = {0.00035, 0.0042, 0.0, 0, 0};       //左轮速度环PID
    4          PID_t RightPID = {0.00030, 0.0050, 0.0, 0, 0};      //右轮速度环PID
    5          
    6          PID_t IMU693PID = {0.6, 0.0, 0.89, 800, 900};        //陀螺仪PID
    7          
    8          
    9          //位置式PID
   10          float pid_poisitional(PID_t* pid, float now, float point)
   11          {
   12   1        static int integral = 0, lasterror = 0;
   13   1        int error = 0;
   14   1        float realise = 0;
   15   1        
   16   1        error = point - now;
   17   1        integral += error;
   18   1        
   19   1        //积分限幅
   20   1        if (integral > pid->i_limit)
   21   1          integral = pid->i_limit;
   22   1        else if (integral < -pid->i_limit)
   23   1          integral = -pid->i_limit;
   24   1        
   25   1        realise = pid->kp * error + pid->ki * integral + pid->kd * (error - lasterror);
   26   1        lasterror = error;
   27   1        
   28   1        //输出限幅
   29   1        if (realise > pid->o_limit)
   30   1          realise = pid->o_limit;
   31   1        else if (realise < -pid->o_limit)
   32   1          realise = -pid->o_limit;
   33   1        
   34   1        return realise;
   35   1      }
   36          
   37          
   38          //增量式PID
   39          float pid_increment(PID_t* pid, int now, int point)
   40          {
   41   1        static int lasterror = 0, preverror = 0;
   42   1        int error;
   43   1        float increase;
   44   1        
   45   1        error = point - now;
   46   1        
   47   1        increase = pid->kp * (error - lasterror) + pid->ki * error + pid->kd * (error - 2 * lasterror + preverro
             -r);
   48   1        
   49   1        preverror = lasterror;
   50   1        lasterror = error;
   51   1        
   52   1        return increase;
   53   1      }


Module Information          Static   Overlayable
------------------------------------------------
C251 COMPILER V5.60.0,  pid                                                                25/03/25  21:58:05  PAGE 2   

  code size            =       550     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       100     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        96     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
